package router

import (
	itemsHandler "ShoppingList-Backend/cmd/api/handlers/items"
	listsHandler "ShoppingList-Backend/cmd/api/handlers/lists"
	"ShoppingList-Backend/pkg/application"
	"ShoppingList-Backend/pkg/middleware"
	"ShoppingList-Backend/pkg/websocket"

	"github.com/gofiber/fiber/v2"

	swagger "github.com/arsmn/fiber-swagger/v2"
	// docs are generated by Swag CLI, you have to import them.
	_ "ShoppingList-Backend/api"
)

func PrivateRoutes(a *fiber.App, app *application.Application) {
	apiv1 := a.Group("/api/v1")

	items := apiv1.Group("/items", middleware.JWTProtected(app.Cfg))
	items.Get("/", itemsHandler.GetItems(app))
	items.Post("/", itemsHandler.CreateItem(app))
	items.Put("/:id", itemsHandler.UpdateItem(app))
	items.Delete("/:id", itemsHandler.DeleteItem(app))

	lists := apiv1.Group("/lists", middleware.JWTProtected(app.Cfg))

	listsWs := lists.Group("/ws", middleware.IsWebSocketAllowed())

	listHub := websocket.NewHub()
	go listHub.Run()
	listsWs.Get("/default/", listsHandler.WsOnListChanges(listHub, app))

	lists.Get("/", listsHandler.GetLists(app))
	lists.Get("/default", listsHandler.GetDefaultList(app))
	lists.Post("/", listsHandler.CreateList(app))
	lists.Put("/:id", listsHandler.UpdateList(listHub, app))
	lists.Put("/:id/default", listsHandler.SetDefaultList(app))
	lists.Delete("/:id", listsHandler.DeleteList(app))
	lists.Post("/:id/items/:itemId", listsHandler.AddItemToList(listHub, app))
	lists.Put("/:id/items/:listItemId", listsHandler.UpdateListItem(listHub, app))
	lists.Delete("/:id/items/:listItemId", listsHandler.RemoveItemFromList(listHub, app))

}

func SwaggerRoute(a *fiber.App, app *application.Application) {
	route := a.Group("/swagger")

	route.Get("*", swagger.Handler)
}
