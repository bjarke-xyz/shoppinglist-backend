basePath: /api/v1
definitions:
  controller.HttpError:
    properties:
      code:
        example: 400
        type: integer
      error:
        example: Bad request
        type: string
    type: object
  model.AddItem:
    properties:
      name:
        type: string
    type: object
  model.AddList:
    properties:
      name:
        type: string
    type: object
  model.Item:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      ownerId:
        type: string
      updatedAt:
        type: string
    type: object
  model.List:
    properties:
      createdAt:
        type: string
      default:
        type: boolean
      deletedAt:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.ListItem'
        type: array
      name:
        type: string
      ownerId:
        type: string
      updatedAt:
        type: string
    type: object
  model.ListItem:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      item:
        $ref: '#/definitions/model.Item'
      itemId:
        type: integer
      listId:
        type: integer
    type: object
  model.UpdateItem:
    properties:
      name:
        type: string
    type: object
  model.UpdateList:
    properties:
      default:
        type: boolean
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
  description: API for the Shopping List application
  title: Shopping List API
  version: "1.0"
paths:
  /items:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Item'
            type: array
      summary: Find all items
    post:
      consumes:
      - application/json
      parameters:
      - description: Add item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/model.AddItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Create item
  /items/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: delete an item
    put:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/model.UpdateItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Update item
  /lists:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.List'
            type: array
      summary: Find all lists
    post:
      consumes:
      - application/json
      parameters:
      - description: Add list
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/model.AddList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.List'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Create list
  /lists/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: delete a list
    put:
      consumes:
      - application/json
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update list
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/model.UpdateList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.List'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Update list
  /lists/add/{listId}/{itemId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: List ID
        in: path
        name: listId
        required: true
        type: integer
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ListItem'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Add an item to a list
  /lists/remove/{listId}/{itemId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: List ID
        in: path
        name: listId
        required: true
        type: integer
      - description: Item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HttpError'
      summary: Remove an item from a list
swagger: "2.0"
